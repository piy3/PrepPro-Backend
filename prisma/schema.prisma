// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
 
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  fullname String 
  email String @unique
  password String
  refreshToken String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  quizAttempts QuizAttempt[]
}


model Quiz{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  topic String
  role String
  difficulty String
  description String?
  questions   Question[]
  answers  String[]
  createdAt   DateTime      @default(now())
  updatedAt DateTime @updatedAt

  // relations
  attempts    QuizAttempt[]
}

//custom type
type Question {
  question String
  options  String[]   // array of options
}


model QuizAttempt {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String   @db.ObjectId 
  quizId         String   @db.ObjectId

  correctAnswers Int
  timeTaken      Int        // seconds or ms
  score          Float      // derived: correctAnswers / timeTaken

  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  // relations
  user  User @relation(fields: [userId], references: [id])
  quiz  Quiz @relation(fields: [quizId], references: [id])
}
